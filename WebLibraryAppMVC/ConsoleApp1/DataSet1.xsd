<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="LibraryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LibraryConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ConsoleApp1.Properties.Settings.GlobalReference.Default.LibraryConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AuthorsTableAdapter" GeneratorDataComponentClassName="AuthorsTableAdapter" Name="Authors" UserDataComponentName="AuthorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibraryConnectionString (Settings)" DbObjectName="Library.dbo.Authors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Authors] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Authors] ([AuthorName]) VALUES (@AuthorName);
SELECT Id, AuthorName FROM Authors WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AuthorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AuthorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, AuthorName FROM dbo.Authors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Authors] SET [AuthorName] = @AuthorName WHERE (([Id] = @Original_Id));
SELECT Id, AuthorName FROM Authors WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AuthorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AuthorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="AuthorName" DataSetColumn="AuthorName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BookAuthorTableAdapter" GeneratorDataComponentClassName="BookAuthorTableAdapter" Name="BookAuthor" UserDataComponentName="BookAuthorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibraryConnectionString (Settings)" DbObjectName="Library.dbo.BookAuthor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BookAuthor] WHERE (([AuthorRefId] = @Original_AuthorRefId) AND ([BookRefId] = @Original_BookRefId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AuthorRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AuthorRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BookAuthor] ([AuthorRefId], [BookRefId]) VALUES (@AuthorRefId, @BookRefId);
SELECT AuthorRefId, BookRefId FROM BookAuthor WHERE (AuthorRefId = @AuthorRefId) AND (BookRefId = @BookRefId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AuthorRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AuthorRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AuthorRefId, BookRefId FROM dbo.BookAuthor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BookAuthor] SET [AuthorRefId] = @AuthorRefId, [BookRefId] = @BookRefId WHERE (([AuthorRefId] = @Original_AuthorRefId) AND ([BookRefId] = @Original_BookRefId));
SELECT AuthorRefId, BookRefId FROM BookAuthor WHERE (AuthorRefId = @AuthorRefId) AND (BookRefId = @BookRefId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AuthorRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AuthorRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AuthorRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AuthorRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AuthorRefId" DataSetColumn="AuthorRefId" />
              <Mapping SourceColumn="BookRefId" DataSetColumn="BookRefId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BookBookTopicTableAdapter" GeneratorDataComponentClassName="BookBookTopicTableAdapter" Name="BookBookTopic" UserDataComponentName="BookBookTopicTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibraryConnectionString (Settings)" DbObjectName="Library.dbo.BookBookTopic" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BookBookTopic] WHERE (([BookTopicRefId] = @Original_BookTopicRefId) AND ([BookRefId] = @Original_BookRefId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookTopicRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookTopicRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BookBookTopic] ([BookTopicRefId], [BookRefId]) VALUES (@BookTopicRefId, @BookRefId);
SELECT BookTopicRefId, BookRefId FROM BookBookTopic WHERE (BookRefId = @BookRefId) AND (BookTopicRefId = @BookTopicRefId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookTopicRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookTopicRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BookTopicRefId, BookRefId FROM dbo.BookBookTopic</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BookBookTopic] SET [BookTopicRefId] = @BookTopicRefId, [BookRefId] = @BookRefId WHERE (([BookTopicRefId] = @Original_BookTopicRefId) AND ([BookRefId] = @Original_BookRefId));
SELECT BookTopicRefId, BookRefId FROM BookBookTopic WHERE (BookRefId = @BookRefId) AND (BookTopicRefId = @BookTopicRefId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookTopicRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookTopicRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookTopicRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookTopicRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BookTopicRefId" DataSetColumn="BookTopicRefId" />
              <Mapping SourceColumn="BookRefId" DataSetColumn="BookRefId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BooksTableAdapter" GeneratorDataComponentClassName="BooksTableAdapter" Name="Books" UserDataComponentName="BooksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibraryConnectionString (Settings)" DbObjectName="Library.dbo.Books" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Books] WHERE (([Id] = @Original_Id) AND ([NumberOfAvailable] = @Original_NumberOfAvailable))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NumberOfAvailable" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfAvailable" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Books] ([BookName], [NumberOfAvailable]) VALUES (@BookName, @NumberOfAvailable);
SELECT Id, BookName, NumberOfAvailable FROM Books WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BookName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BookName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NumberOfAvailable" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfAvailable" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, BookName, NumberOfAvailable FROM dbo.Books</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Books] SET [BookName] = @BookName, [NumberOfAvailable] = @NumberOfAvailable WHERE (([Id] = @Original_Id) AND ([NumberOfAvailable] = @Original_NumberOfAvailable));
SELECT Id, BookName, NumberOfAvailable FROM Books WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BookName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BookName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NumberOfAvailable" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfAvailable" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NumberOfAvailable" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfAvailable" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="BookName" DataSetColumn="BookName" />
              <Mapping SourceColumn="NumberOfAvailable" DataSetColumn="NumberOfAvailable" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BookTopicsTableAdapter" GeneratorDataComponentClassName="BookTopicsTableAdapter" Name="BookTopics" UserDataComponentName="BookTopicsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibraryConnectionString (Settings)" DbObjectName="Library.dbo.BookTopics" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BookTopics] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BookTopics] ([Topic]) VALUES (@Topic);
SELECT Id, Topic FROM BookTopics WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Topic" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Topic" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Topic FROM dbo.BookTopics</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BookTopics] SET [Topic] = @Topic WHERE (([Id] = @Original_Id));
SELECT Id, Topic FROM BookTopics WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Topic" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Topic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Topic" DataSetColumn="Topic" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BookUserCardTableAdapter" GeneratorDataComponentClassName="BookUserCardTableAdapter" Name="BookUserCard" UserDataComponentName="BookUserCardTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibraryConnectionString (Settings)" DbObjectName="Library.dbo.BookUserCard" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BookUserCard] WHERE (([UserCardRefId] = @Original_UserCardRefId) AND ([BookRefId] = @Original_BookRefId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserCardRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserCardRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BookUserCard] ([UserCardRefId], [BookRefId]) VALUES (@UserCardRefId, @BookRefId);
SELECT UserCardRefId, BookRefId FROM BookUserCard WHERE (BookRefId = @BookRefId) AND (UserCardRefId = @UserCardRefId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserCardRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserCardRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserCardRefId, BookRefId FROM dbo.BookUserCard</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BookUserCard] SET [UserCardRefId] = @UserCardRefId, [BookRefId] = @BookRefId WHERE (([UserCardRefId] = @Original_UserCardRefId) AND ([BookRefId] = @Original_BookRefId));
SELECT UserCardRefId, BookRefId FROM BookUserCard WHERE (BookRefId = @BookRefId) AND (UserCardRefId = @UserCardRefId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserCardRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserCardRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserCardRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserCardRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookRefId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookRefId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserCardRefId" DataSetColumn="UserCardRefId" />
              <Mapping SourceColumn="BookRefId" DataSetColumn="BookRefId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserCardsTableAdapter" GeneratorDataComponentClassName="UserCardsTableAdapter" Name="UserCards" UserDataComponentName="UserCardsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibraryConnectionString (Settings)" DbObjectName="Library.dbo.UserCards" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserCards] WHERE (([Id] = @Original_Id) AND ([DateOfMaking] = @Original_DateOfMaking))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@Original_DateOfMaking" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="DateOfMaking" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserCards] ([Id], [DateOfMaking]) VALUES (@Id, @DateOfMaking);
SELECT Id, DateOfMaking FROM UserCards WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@DateOfMaking" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="DateOfMaking" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, DateOfMaking FROM dbo.UserCards</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserCards] SET [Id] = @Id, [DateOfMaking] = @DateOfMaking WHERE (([Id] = @Original_Id) AND ([DateOfMaking] = @Original_DateOfMaking));
SELECT Id, DateOfMaking FROM UserCards WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@DateOfMaking" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="DateOfMaking" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@Original_DateOfMaking" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="DateOfMaking" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="DateOfMaking" DataSetColumn="DateOfMaking" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibraryConnectionString (Settings)" DbObjectName="Library.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([Id] = @Original_Id) AND ([Login] = @Original_Login))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([FirstName], [SecondName], [Login], [Password], [Fake]) VALUES (@FirstName, @SecondName, @Login, @Password, @Fake);
SELECT Id, FirstName, SecondName, Login, Password, Fake FROM Users WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecondName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecondName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Fake" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Fake" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, FirstName, SecondName, Login, Password, Fake FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [FirstName] = @FirstName, [SecondName] = @SecondName, [Login] = @Login, [Password] = @Password, [Fake] = @Fake WHERE (([Id] = @Original_Id) AND ([Login] = @Original_Login));
SELECT Id, FirstName, SecondName, Login, Password, Fake FROM Users WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecondName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecondName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Fake" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Fake" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="SecondName" DataSetColumn="SecondName" />
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="Fake" DataSetColumn="Fake" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_UserDSName="DataSet1" msprop:Generator_DataSetName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Authors" msprop:Generator_RowEvHandlerName="AuthorsRowChangeEventHandler" msprop:Generator_RowDeletedName="AuthorsRowDeleted" msprop:Generator_RowDeletingName="AuthorsRowDeleting" msprop:Generator_RowEvArgName="AuthorsRowChangeEvent" msprop:Generator_TablePropName="Authors" msprop:Generator_RowChangedName="AuthorsRowChanged" msprop:Generator_RowChangingName="AuthorsRowChanging" msprop:Generator_TableClassName="AuthorsDataTable" msprop:Generator_RowClassName="AuthorsRow" msprop:Generator_TableVarName="tableAuthors" msprop:Generator_UserTableName="Authors">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="AuthorName" msprop:Generator_ColumnPropNameInRow="AuthorName" msprop:Generator_ColumnPropNameInTable="AuthorNameColumn" msprop:Generator_ColumnVarNameInTable="columnAuthorName" msprop:Generator_UserColumnName="AuthorName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BookAuthor" msprop:Generator_RowEvHandlerName="BookAuthorRowChangeEventHandler" msprop:Generator_RowDeletedName="BookAuthorRowDeleted" msprop:Generator_RowDeletingName="BookAuthorRowDeleting" msprop:Generator_RowEvArgName="BookAuthorRowChangeEvent" msprop:Generator_TablePropName="BookAuthor" msprop:Generator_RowChangedName="BookAuthorRowChanged" msprop:Generator_RowChangingName="BookAuthorRowChanging" msprop:Generator_TableClassName="BookAuthorDataTable" msprop:Generator_RowClassName="BookAuthorRow" msprop:Generator_TableVarName="tableBookAuthor" msprop:Generator_UserTableName="BookAuthor">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AuthorRefId" msprop:Generator_ColumnPropNameInRow="AuthorRefId" msprop:Generator_ColumnPropNameInTable="AuthorRefIdColumn" msprop:Generator_ColumnVarNameInTable="columnAuthorRefId" msprop:Generator_UserColumnName="AuthorRefId" type="xs:int" />
              <xs:element name="BookRefId" msprop:Generator_ColumnPropNameInRow="BookRefId" msprop:Generator_ColumnPropNameInTable="BookRefIdColumn" msprop:Generator_ColumnVarNameInTable="columnBookRefId" msprop:Generator_UserColumnName="BookRefId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BookBookTopic" msprop:Generator_RowEvHandlerName="BookBookTopicRowChangeEventHandler" msprop:Generator_RowDeletedName="BookBookTopicRowDeleted" msprop:Generator_RowDeletingName="BookBookTopicRowDeleting" msprop:Generator_RowEvArgName="BookBookTopicRowChangeEvent" msprop:Generator_TablePropName="BookBookTopic" msprop:Generator_RowChangedName="BookBookTopicRowChanged" msprop:Generator_RowChangingName="BookBookTopicRowChanging" msprop:Generator_TableClassName="BookBookTopicDataTable" msprop:Generator_RowClassName="BookBookTopicRow" msprop:Generator_TableVarName="tableBookBookTopic" msprop:Generator_UserTableName="BookBookTopic">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BookTopicRefId" msprop:Generator_ColumnPropNameInRow="BookTopicRefId" msprop:Generator_ColumnPropNameInTable="BookTopicRefIdColumn" msprop:Generator_ColumnVarNameInTable="columnBookTopicRefId" msprop:Generator_UserColumnName="BookTopicRefId" type="xs:int" />
              <xs:element name="BookRefId" msprop:Generator_ColumnPropNameInRow="BookRefId" msprop:Generator_ColumnPropNameInTable="BookRefIdColumn" msprop:Generator_ColumnVarNameInTable="columnBookRefId" msprop:Generator_UserColumnName="BookRefId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Books" msprop:Generator_RowEvHandlerName="BooksRowChangeEventHandler" msprop:Generator_RowDeletedName="BooksRowDeleted" msprop:Generator_RowDeletingName="BooksRowDeleting" msprop:Generator_RowEvArgName="BooksRowChangeEvent" msprop:Generator_TablePropName="Books" msprop:Generator_RowChangedName="BooksRowChanged" msprop:Generator_RowChangingName="BooksRowChanging" msprop:Generator_TableClassName="BooksDataTable" msprop:Generator_RowClassName="BooksRow" msprop:Generator_TableVarName="tableBooks" msprop:Generator_UserTableName="Books">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="BookName" msprop:Generator_ColumnPropNameInRow="BookName" msprop:Generator_ColumnPropNameInTable="BookNameColumn" msprop:Generator_ColumnVarNameInTable="columnBookName" msprop:Generator_UserColumnName="BookName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NumberOfAvailable" msprop:Generator_ColumnPropNameInRow="NumberOfAvailable" msprop:Generator_ColumnPropNameInTable="NumberOfAvailableColumn" msprop:Generator_ColumnVarNameInTable="columnNumberOfAvailable" msprop:Generator_UserColumnName="NumberOfAvailable" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BookTopics" msprop:Generator_RowEvHandlerName="BookTopicsRowChangeEventHandler" msprop:Generator_RowDeletedName="BookTopicsRowDeleted" msprop:Generator_RowDeletingName="BookTopicsRowDeleting" msprop:Generator_RowEvArgName="BookTopicsRowChangeEvent" msprop:Generator_TablePropName="BookTopics" msprop:Generator_RowChangedName="BookTopicsRowChanged" msprop:Generator_RowChangingName="BookTopicsRowChanging" msprop:Generator_TableClassName="BookTopicsDataTable" msprop:Generator_RowClassName="BookTopicsRow" msprop:Generator_TableVarName="tableBookTopics" msprop:Generator_UserTableName="BookTopics">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Topic" msprop:Generator_ColumnPropNameInRow="Topic" msprop:Generator_ColumnPropNameInTable="TopicColumn" msprop:Generator_ColumnVarNameInTable="columnTopic" msprop:Generator_UserColumnName="Topic" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BookUserCard" msprop:Generator_RowEvHandlerName="BookUserCardRowChangeEventHandler" msprop:Generator_RowDeletedName="BookUserCardRowDeleted" msprop:Generator_RowDeletingName="BookUserCardRowDeleting" msprop:Generator_RowEvArgName="BookUserCardRowChangeEvent" msprop:Generator_TablePropName="BookUserCard" msprop:Generator_RowChangedName="BookUserCardRowChanged" msprop:Generator_RowChangingName="BookUserCardRowChanging" msprop:Generator_TableClassName="BookUserCardDataTable" msprop:Generator_RowClassName="BookUserCardRow" msprop:Generator_TableVarName="tableBookUserCard" msprop:Generator_UserTableName="BookUserCard">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserCardRefId" msprop:Generator_ColumnPropNameInRow="UserCardRefId" msprop:Generator_ColumnPropNameInTable="UserCardRefIdColumn" msprop:Generator_ColumnVarNameInTable="columnUserCardRefId" msprop:Generator_UserColumnName="UserCardRefId" type="xs:int" />
              <xs:element name="BookRefId" msprop:Generator_ColumnPropNameInRow="BookRefId" msprop:Generator_ColumnPropNameInTable="BookRefIdColumn" msprop:Generator_ColumnVarNameInTable="columnBookRefId" msprop:Generator_UserColumnName="BookRefId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserCards" msprop:Generator_RowEvHandlerName="UserCardsRowChangeEventHandler" msprop:Generator_RowDeletedName="UserCardsRowDeleted" msprop:Generator_RowDeletingName="UserCardsRowDeleting" msprop:Generator_RowEvArgName="UserCardsRowChangeEvent" msprop:Generator_TablePropName="UserCards" msprop:Generator_RowChangedName="UserCardsRowChanged" msprop:Generator_RowChangingName="UserCardsRowChanging" msprop:Generator_TableClassName="UserCardsDataTable" msprop:Generator_RowClassName="UserCardsRow" msprop:Generator_TableVarName="tableUserCards" msprop:Generator_UserTableName="UserCards">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="DateOfMaking" msprop:Generator_ColumnPropNameInRow="DateOfMaking" msprop:Generator_ColumnPropNameInTable="DateOfMakingColumn" msprop:Generator_ColumnVarNameInTable="columnDateOfMaking" msprop:Generator_UserColumnName="DateOfMaking" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_TablePropName="Users" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_RowClassName="UsersRow" msprop:Generator_TableVarName="tableUsers" msprop:Generator_UserTableName="Users">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="FirstName" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_ColumnVarNameInTable="columnFirstName" msprop:Generator_UserColumnName="FirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecondName" msprop:Generator_ColumnPropNameInRow="SecondName" msprop:Generator_ColumnPropNameInTable="SecondNameColumn" msprop:Generator_ColumnVarNameInTable="columnSecondName" msprop:Generator_UserColumnName="SecondName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Login" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_UserColumnName="Login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Fake" msprop:Generator_ColumnPropNameInRow="Fake" msprop:Generator_ColumnPropNameInTable="FakeColumn" msprop:Generator_ColumnVarNameInTable="columnFake" msprop:Generator_UserColumnName="Fake" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Authors" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="BookAuthor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BookAuthor" />
      <xs:field xpath="mstns:AuthorRefId" />
      <xs:field xpath="mstns:BookRefId" />
    </xs:unique>
    <xs:unique name="BookBookTopic_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BookBookTopic" />
      <xs:field xpath="mstns:BookTopicRefId" />
      <xs:field xpath="mstns:BookRefId" />
    </xs:unique>
    <xs:unique name="Books_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Books" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="BookTopics_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BookTopics" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="BookUserCard_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BookUserCard" />
      <xs:field xpath="mstns:UserCardRefId" />
      <xs:field xpath="mstns:BookRefId" />
    </xs:unique>
    <xs:unique name="UserCards_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserCards" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_dbo.BookAuthor_dbo.Authors_AuthorRefId" msdata:parent="Authors" msdata:child="BookAuthor" msdata:parentkey="Id" msdata:childkey="AuthorRefId" msprop:Generator_UserParentTable="Authors" msprop:Generator_UserChildTable="BookAuthor" msprop:Generator_RelationVarName="_relationFK_dbo_BookAuthor_dbo_Authors_AuthorRefId" msprop:Generator_ChildPropName="GetBookAuthorRows" msprop:Generator_ParentPropName="AuthorsRow" msprop:Generator_UserRelationName="FK_dbo.BookAuthor_dbo.Authors_AuthorRefId" />
      <msdata:Relationship name="FK_dbo.BookAuthor_dbo.Books_BookRefId" msdata:parent="Books" msdata:child="BookAuthor" msdata:parentkey="Id" msdata:childkey="BookRefId" msprop:Generator_UserParentTable="Books" msprop:Generator_UserChildTable="BookAuthor" msprop:Generator_RelationVarName="_relationFK_dbo_BookAuthor_dbo_Books_BookRefId" msprop:Generator_UserRelationName="FK_dbo.BookAuthor_dbo.Books_BookRefId" msprop:Generator_ChildPropName="GetBookAuthorRows" msprop:Generator_ParentPropName="BooksRow" />
      <msdata:Relationship name="FK_dbo.BookBookTopic_dbo.Books_BookRefId" msdata:parent="Books" msdata:child="BookBookTopic" msdata:parentkey="Id" msdata:childkey="BookRefId" msprop:Generator_UserParentTable="Books" msprop:Generator_UserChildTable="BookBookTopic" msprop:Generator_RelationVarName="_relationFK_dbo_BookBookTopic_dbo_Books_BookRefId" msprop:Generator_UserRelationName="FK_dbo.BookBookTopic_dbo.Books_BookRefId" msprop:Generator_ChildPropName="GetBookBookTopicRows" msprop:Generator_ParentPropName="BooksRow" />
      <msdata:Relationship name="FK_dbo.BookBookTopic_dbo.BookTopics_BookTopicRefId" msdata:parent="BookTopics" msdata:child="BookBookTopic" msdata:parentkey="Id" msdata:childkey="BookTopicRefId" msprop:Generator_UserParentTable="BookTopics" msprop:Generator_UserChildTable="BookBookTopic" msprop:Generator_RelationVarName="_relationFK_dbo_BookBookTopic_dbo_BookTopics_BookTopicRefId" msprop:Generator_UserRelationName="FK_dbo.BookBookTopic_dbo.BookTopics_BookTopicRefId" msprop:Generator_ChildPropName="GetBookBookTopicRows" msprop:Generator_ParentPropName="BookTopicsRow" />
      <msdata:Relationship name="FK_dbo.BookUserCard_dbo.Books_BookRefId" msdata:parent="Books" msdata:child="BookUserCard" msdata:parentkey="Id" msdata:childkey="BookRefId" msprop:Generator_UserParentTable="Books" msprop:Generator_UserChildTable="BookUserCard" msprop:Generator_RelationVarName="_relationFK_dbo_BookUserCard_dbo_Books_BookRefId" msprop:Generator_ChildPropName="GetBookUserCardRows" msprop:Generator_ParentPropName="BooksRow" msprop:Generator_UserRelationName="FK_dbo.BookUserCard_dbo.Books_BookRefId" />
      <msdata:Relationship name="FK_dbo.BookUserCard_dbo.UserCards_UserCardRefId" msdata:parent="UserCards" msdata:child="BookUserCard" msdata:parentkey="Id" msdata:childkey="UserCardRefId" msprop:Generator_UserParentTable="UserCards" msprop:Generator_UserChildTable="BookUserCard" msprop:Generator_RelationVarName="_relationFK_dbo_BookUserCard_dbo_UserCards_UserCardRefId" msprop:Generator_UserRelationName="FK_dbo.BookUserCard_dbo.UserCards_UserCardRefId" msprop:Generator_ChildPropName="GetBookUserCardRows" msprop:Generator_ParentPropName="UserCardsRow" />
      <msdata:Relationship name="FK_dbo.UserCards_dbo.Users_Id" msdata:parent="Users" msdata:child="UserCards" msdata:parentkey="Id" msdata:childkey="Id" msprop:Generator_UserParentTable="Users" msprop:Generator_UserChildTable="UserCards" msprop:Generator_RelationVarName="_relationFK_dbo_UserCards_dbo_Users_Id" msprop:Generator_UserRelationName="FK_dbo.UserCards_dbo.Users_Id" msprop:Generator_ChildPropName="GetUserCardsRows" msprop:Generator_ParentPropName="UsersRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>